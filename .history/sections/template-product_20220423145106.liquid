{%- comment -%}商品画像のスクロール{%- endcomment -%}
<link rel="stylesheet" href="https://unpkg.com/swiper@8/swiper-bundle.css" />
<!-- aync,deferを付けるとswiperがうまく効かない。shopiyf theme -->
<script src="https://unpkg.com/swiper@8/swiper-bundle.js"></script>

{%- comment -%}!important: cssを上書きする。{%- endcomment -%}
<style>
    .swiper-button-prev,
    .swiper-button-next {
        color: black;
        top: auto !important;
        height: 20px;
    }

    .swiper-button-prev::after,
    .swiper-button-next::after {
        font-size: 20px;
    }

    .swiper-pagination {
        color: black;
        bottom: 0 !important;
    }

    .swiper-pagination-bullet-active {
        background-color: black !important;
    }

    .product--information {
        height: fit-content;
    }

    .spr-container {
        padding: 30px;
    }

    .spr-summary {
        color: gray;
        display: flex;
        flex-flow: column;
    }

    .spr-summary-actions a {
        color: blue;
        font-weight: bold;
        background-color: transparent;
    }

    .spr-summary-actions a:hover {
        background-color: transparent;

    }

    .spr-icon-star-empty:before {
        content: '\e801';
        color: #ffd500;
    }

    .spr-button {
        background-color: blue;
        color: white;
        padding: 4px 12px;
        border: 2px white solid;
        border-radius: 0.375rem;
        font-weight: bold;
    }

    .spr-button:hover {
        color: gray;
    }

    .spr-content input {
        outline: 2px solid transparent;
        outline-offset: 2px;
    }

    .spr-form-message-error {
        background: whitesmoke;
        color: red;
        border: 2px solid red;
        padding: 0.3rem;
        margin: 2rem 0;
        border-radius: 0.375rem;
        box-shadow: 2px 2px 2px lightgrey;
        font-weight: bold;
    }
</style>

{%- comment -%}選択された商品データ{%- endcomment -%}
{% assign selected_variant = product.selected_or_first_available_variant %}
<!-- PRODUCT CONTENT -->
<div class="max-w-6xl mx-auto my-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <!-- PRODUCT IMAGES -->
        <div class="product--medias">
            <div class="hidden md:block">
                {% for media in product.media %}
                <div class="h-100 overflow-hidden p-2">
                    {% render "product-media", media: media %}
                </div>
                {% endfor %}
            </div>
            <div class="md:hidden">
                <div class="swiper h-96">
                    <div class="swiper-wrapper">
                        {% for media in product.media %}
                        <div class="swiper-slide">
                            <div class="h-80 overflow-hidden p-2">
                                {% render "product-media", media: media %}
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                    <div class="swiper-pagination"></div>
                    <div class="swiper-button-prev"></div>
                    <div class="swiper-button-next"></div>
                </div>
            </div>
        </div>
        <!-- PRODUCT INFOMATION -->
        <div class="product--information p-3 sticky top-5">
            {%- comment -%}id, novalidateを付与{%- endcomment -%}
            <!-- PRODUCT FORM -->
            {% form 'product', product, id: "product-form", novalidate: "novalidate" %}
            {%- comment -%}これがなければ商品が正常にカートに追加できない{%- endcomment -%}
            <input type="hidden" name="id" value="{{ selected_variant.id }}">
            {% for block in section.blocks %}
            {% case block.type %}
            {% when "vendor" %}
            <!-- PRODUCT VENDOR -->
            <div class="my-3">
                <span class="text-xs text-gray-500 font-oswald">{{ product.vendor }}</span>
            </div>
            {% when "title" %}
            <!-- PRODUCT TITLE -->
            <div class="my-3">
                <h1 class="text-3xl text-gray-900 font-bold font-oswald">{{ product.title }}</h1>
            </div>
            {% when "price" %}
            <!-- PRODUCT PRICE -->
            <div class="my-3" id="price-{{ section.id }}">
                <span class="text-base text-gray-400 line-through">{{ selected_variant.compare_at_price | money
                    }}</span>
                <span class="text-lg text-gray-900 ml-1">{{ selected_variant.price | money }}</span>
                {% if selected_variant.price < selected_variant.compare_at_price %} <span
                    class="px-5 py-1 text-sm font-bold bg-indigo-500 ring-white ring-1 ring-offset-2 ring-offset-dark-300 rounded-full text-white mx-4">
                    Sale</span>
                    {% endif %}
            </div>
            {% when "variant_selector" %}
            <div class="my-3">
                <!-- PRODUCT OPTIONS-->
                {% unless product.has_only_default_variant %}
                {%- comment -%}div -> variant-selector に変更。customElementsで作成{%- endcomment -%}
                <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                    {%- comment -%}for=""：属性は一意の値を入れる{%- endcomment -%}
                    <label for="Option-{{ section.id }}">{{ option.name }}</label>
                    <div class="my-2">
                        <select name="options[{{ option.name | escape }}]" id="Option-{{ section.id }}"
                            class="w-full border py-1 px-3">
                            {% for value in option.values %}
                            <option value="{{ value | escape }}" {% if option.selected_value==value %}
                                selected="selected" {% endif %}>
                                {{ value }}
                            </option>
                            {% endfor %}
                        </select>
                    </div>
                    {%- comment -%}product.variantsのJSONを埋め込む{%- endcomment -%}
                    <script type="application/json">
                                            {{ product.variants | json }}
                                        </script>
                    {% endfor %}
                </variant-selector>
                {% endunless %}
            </div>
            {% when "quantity" %}
            <!-- PRODUCT QUANTITY -->
            <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                    <input type="number" name="quantity" id="Quantity-{{ section.id }}" value="1" min="1"
                        class="w-full border p-3">
                </div>
            </div>
            {% when "description" %}
            <!-- PRODUCT DESCRIPTION -->
            <div class="my-3">
                <p class="text-gray-700">{{ product.description }}</p>
            </div>
            {% when "checkout_buttons" %}
            <!-- PRODUCT CHECKOUT BUTTON -->
            <div class="my-3">
                <button type="submit" name="add"
                    class="w-full px-6 py-4 bg-gray-900 text-white hover:bg-gray-700 rounded-sm my-2" {% if
                    selected_variant.available==false %} disabled {% endif %}>
                    {% if selected_variant.available == false %}
                    Sold Out
                    {% else %}
                    Add To Cart
                    {% endif %}
                </button>
            </div>
            {% else %}
            {% endcase %}
            {% endfor %}
            {% endform %}
        </div>
    </div>
</div>

<script>
    class VariantSelector extends HTMLElement {
        constructor() {
            super();
            this.addEventListener("change", this.onVariantChange)
        }
        // this.　がなければエラーになった。
        onVariantChange() {
            this.getSelectedOptions();
            this.getSelectedVariant();

            if (this.currentVariant) {
                this.updateURL();
                this.updateFormID();
                this.updatePrice();
            }
        }
        getSelectedOptions() {
            this.options = Array.from(this.querySelectorAll('select'), (select) => select.value)
        }

        getVariantJSON() {
            //this.variantDataがなければ埋め込んだJSONデータを読み込んで使用
            this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent)
            return this.variantData;
        }

        getSelectedVariant() {
            this.currentVariant = this.getVariantJSON().find(
                (variant) => {
                    const findings = !variant.options.map(
                        (option, index) => {
                            return this.options[index] === option;
                        },
                    ).includes(false);
                    if (findings) return variant;
                }
            );
            console.log("currentVariant: ", this.currentVariant);
        }
        updateURL() {
            if (!this.currentVariant) return;
            // dataset.url => variant-selector data-url=""の事
            window.history.replaceState({}, "", `${this.dataset.url}?variant=${this.currentVariant.id}`);
        }

        updateFormID() {
            const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
            form_input.value = this.currentVariant.id;
        }

        updatePrice() {
            fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&session_id=${this.dataset.section}`)
                .then((response) => response.text())
                .then((responseText) => {
                    const id = `price-${this.dataset.section}`
                    const html = new DOMParser().parseFromString(responseText, 'text/html');
                    console.log('html :', html);
                    const oldPrice = document.getElementById(id);
                    const newPrice = html.getElementById(id);
                    console.log('oldHtml: ', oldPrice.innerHTML);
                    console.log('newHtml: ', newPrice.innerHTML);
                    if (oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
                });
        }
    }
    customElements.define("variant-selector", VariantSelector);
</script>

<script>
    const swiper = new Swiper('.swiper', {
        direction: "horizontal",
        pagination: {
            el: '.swiper-pagination',
            clickable: true
        },
        navigation: {
            prevEl: '.swiper-button-prev',
            nextEl: ".swiper-button-next"
        },
    })
</script>

{% schema %}
{
"name": "Product",
"blocks": [
{
"type": "vendor",
"name": "Vendor",
"limit": 1
},
{
"type": "title",
"name": "Title",
"limit": 1
},
{
"type": "price",
"name": "Price",
"limit": 1
},
{
"type": "variant_selector",
"name": "Variant Selector",
"limit": 1
},
{
"type": "quantity",
"name": "Quantity",
"limit": 1
},
{
"type": "description",
"name": "Description",
"limit": 1
},
{
"type": "checkout_buttons",
"name": "Checkout Buttons",
"limit": 1
}
]
}
{% endschema %}